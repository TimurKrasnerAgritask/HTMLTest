.DropdownListContainer {
  position: absolute;
  overflow-y: auto;
  width: 100%;
  -webkit-padding-end: 15px;
          padding-inline-end: 15px;
  -webkit-padding-after: 15px;
          padding-block-end: 15px;
  -webkit-padding-start: 21px;
          padding-inline-start: 21px;
  border-radius: 4px;
  box-shadow: var(--menu-dropshadow);
  background: var(--background-color);
  z-index: var(--tooltip-z);
}
.DropdownListContainer > :first-child {
  -webkit-padding-before: 21px;
          padding-block-start: 21px;
}
.DropdownListContainer.below {
  top: 100%;
}
.DropdownListContainer.above {
  bottom: 100%;
}
.Tooltip {
  --tooltip-padding: 18px;
  background: var(--white);
  border-radius: 3px;
  display: inline-block;
  padding: var(--tooltip-padding);
  z-index: var(--tooltip-z);
  max-width: 300px;
  width: auto;
  height: auto;
  word-break: break-word;
  -webkit-hyphens: auto;
          hyphens: auto;
  white-space: break-spaces;
}

@media screen and (max-width: 600px) {
  .Tooltip {
    max-width: 200px;
  }
}
.Tooltip-content {
  -webkit-padding-after: 1px;
          padding-block-end: 1px;
  overflow: auto;
}

.Tooltip::before {
  content: "";
  position: absolute;
  border: solid transparent calc(var(--arrow-size));
  --center-arrow: calc(50% - var(--arrow-size));
  --position-end: calc(100% - 1px);
}

.Tooltip[portal-position=bottom]::before {
  border-bottom-color: white;
  border-top: unset;
  bottom: var(--position-end);
  left: var(--center-arrow);
}

.Tooltip[portal-position=top]::before {
  border-top-color: white;
  border-bottom: unset;
  top: 100%;
  left: var(--center-arrow);
}

.Tooltip[portal-position=right]::before,
body[dir=ltr] .Tooltip[portal-position=inline-end]::before,
body[dir=rtl] .Tooltip[portal-position=inline-start]::before {
  border-right-color: white;
  border-left: unset;
  right: var(--position-end);
  top: var(--center-arrow);
}

.Tooltip[portal-position=left]::before,
body[dir=ltr] .Tooltip[portal-position=inline-start]::before,
body[dir=rtl] .Tooltip[portal-position=inline-end]::before {
  border-left-color: white;
  border-right: unset;
  left: var(--position-end);
  top: var(--center-arrow);
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 300ms ease-in;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}
.ErrorMessage {
  font-size: 0.8rem;
  color: var(--severity-red);
  z-index: 1;
  inset-inline-end: 0;
}
.ErrorMessage.position-bottom {
  transform: translateY(100%);
  inset-block-end: calc(-1 * var(--spacing-01));
}
.ErrorMessage.position-corner {
  inset-inline-end: 5px;
  inset-block-end: 5px;
}
.ErrorMessage.position-bottom-start {
  inset-inline-start: 0;
}
.ErrorMessage .icon {
  font-size: 1rem;
}
.StaticLabel,
.StaticLabel.mt-static-label {
  text-transform: capitalize;
  margin-bottom: var(--spacing-01);
  font-size: 0.875rem;
}
.StaticLabel-info,
.StaticLabel.mt-static-label-info {
  color: var(--gray-900);
  width: 1em;
  height: 1em;
  margin-inline: 0.15em;
  position: relative;
  top: 0.1em;
}
svg path[data-v-2c673d2c],
svg rect[data-v-2c673d2c] {
  fill: var(--lightish-blue);
}
.AllOptionsSelectionButton {
  align-items: center;
  gap: var(--spacing-02);
}
/**
* Mocks padding-end behaviour
 */
/**
* Mocks padding-start behaviour
 */
/**
* Removes pad-end from last and pad-start from first elements
 */
/**
* Adds settings to have text-overflow: ellipsis.
 */
/**
* Creates a css arrow pointing to the top
 */
/**
* Creates a css arrow pointing to the bottom
 */
/**
* Creates a css arrow pointing to the right
 */
/**
* Creates a css arrow pointing to the left
 */
/**
* Change color of SVG icon
*/
/**
* Controls styles based on the body direction -
* has a optional 4th argument to overwrite the rtl attribute
**/
/**
* Creates a container with collapsing margin at a certain point
**/
.at-checkbox-input {
  display: none;
}

.AtCheckbox {
  display: inline-flex;
  align-items: center;
  color: var(--mt-color);
  -webkit-margin-end: var(--spacing-08);
          margin-inline-end: var(--spacing-08);
  font-size: var(--input-font-size);
  cursor: pointer;
}
.AtCheckbox.disabled {
  cursor: context-menu;
}
.AtCheckbox .at-checkbox {
  display: inline-block;
  font-size: 1.14em;
  -webkit-margin-end: 0.75rem;
          margin-inline-end: 0.75rem;
  position: relative;
  min-width: 1.1em;
  height: 1.1em;
  border-radius: 4px;
  border: solid 2px var(--gray-800);
  background: var(--white);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  flex-shrink: 0;
}
.AtCheckbox .at-checkbox:before {
  content: "";
  height: 2.5em;
  width: 2.5em;
  border-radius: 50%;
  background-color: transparent;
  position: absolute;
  top: -0.6875em;
  left: -0.875em;
  z-index: 1;
  transform: scale(0);
  transition: 300ms;
}
.AtCheckbox .at-checkbox:after {
  display: none;
}
.AtCheckbox .at-checkbox:hover:before, .AtCheckbox .at-checkbox:focus:before {
  background-color: rgba(210, 210, 210, 0.3);
  transform: scale(1);
  transition: 300ms;
}
.AtCheckbox .at-checkbox.checked {
  border-color: var(--lightish-blue);
  background-color: var(--lightish-blue);
}
.AtCheckbox .at-checkbox.checked:hover:before {
  background-color: rgba(58, 121, 255, 0.1);
}
.AtCheckbox .at-checkbox.checked .at-checkbox-icon {
  color: var(--white);
  position: absolute;
  top: -0.15em;
  display: block;
}
.AtCheckbox .at-checkbox.checked .indeterminate:before {
  content: "-";
  position: absolute;
  top: -4px;
  left: -4px;
}
.AtCheckbox .at-checkbox.disabled {
  border-color: var(--quotation-disabled-grey);
}
.AtCheckbox .at-checkbox.disabled.checked {
  border-color: var(--quotation-disabled-grey);
  background-color: var(--quotation-disabled-grey);
}
.AtCheckbox .at-checkbox.disabled:hover:before {
  display: none;
}
.AtCheckbox .required-sign {
  color: var(--severity-red);
  -webkit-margin-start: 0.1875rem;
          margin-inline-start: 0.1875rem;
}
.AtCheckbox .at-checkbox-label {
  position: relative;
  top: 0.05em;
}
.AtSelectOption,
.AtHierarchyOption-item {
  text-transform: capitalize;
  text-align: start;
  word-break: break-word;
  -webkit-hyphens: auto;
          hyphens: auto;
  min-height: calc(var(--spacing-08) - var(--spacing-03));
  padding: 4px 8px;
  cursor: pointer;
}
.AtSelectOption.selected:not(:hover),
.AtHierarchyOption-item.selected:not(:hover) {
  background-color: var(--pri-500);
  color: var(--gray-100);
}
.AtSelectOption > .checkbox,
.AtHierarchyOption-item > .checkbox {
  -webkit-margin-end: 0.5em;
          margin-inline-end: 0.5em;
}
.AtSelectOption > .AtCheckbox,
.AtHierarchyOption-item > .AtCheckbox {
  align-items: flex-start;
  color: inherit;
  margin-bottom: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
}
.AtSelectOption > .AtCheckbox .at-checkbox,
.AtHierarchyOption-item > .AtCheckbox .at-checkbox {
  top: 2px;
}
.AtSelectOption .AtSelectOption-single,
.AtSelectOption .AtHierarchyOption-single,
.AtSelectOption .AtHierarchyOption-multiple,
.AtSelectOption .AtSelectOption-multiple,
.AtHierarchyOption-item .AtSelectOption-single,
.AtHierarchyOption-item .AtHierarchyOption-single,
.AtHierarchyOption-item .AtHierarchyOption-multiple,
.AtHierarchyOption-item .AtSelectOption-multiple {
  text-align: inherit;
}
.AtSelectOption:hover,
.AtHierarchyOption-item:hover {
  background-color: var(--pri-100);
}
.AtSelectOption > button,
.AtHierarchyOption-item > button {
  color: inherit;
}
.AtSelectDropdown {
  font-size: 0.875rem;
  text-transform: capitalize;
}
.AtSelectDropdown-groups {
  -webkit-padding-start: var(--spacing-05);
          padding-inline-start: var(--spacing-05);
  -webkit-padding-before: var(--spacing-02);
          padding-block-start: var(--spacing-02);
}
.AtSelectDropdown .loader {
  display: flex;
  justify-content: center;
}
.AtSelectDropdown-title {
  padding: 0.62em 0;
}
.LengthLimit {
  font-size: 0.875em;
}
.LengthLimit.max_or_invalid {
  color: var(--severity-red);
}
.AtInput {
  --icon-spacing: var(--spacing-02);
  --input-inline-padding: var(--spacing-01);
  padding-inline: var(--input-inline-padding);
  box-sizing: border-box;
  display: flex;
  position: relative;
  background: var(--background-color);
  --icon-colors: var(--gray-800);
}
.AtInput input {
  font-family: var(--font-family-base);
}
.AtInput input[type=date] {
  text-transform: uppercase;
}
.AtInput > .input:-webkit-autofill, .input:-webkit-autofill ~ .AtInput-buttons {
  box-shadow: 0 0 0px 100vmax #e8f0fe inset;
}
.AtInput:has(.input:-webkit-autofill) .input {
  border-end-end-radius: 0;
  border-start-end-radius: 0;
}
.AtInput:has(.input:-webkit-autofill) .AtInput-buttons {
  border-end-end-radius: var(--input-border-radius);
  border-start-end-radius: var(--input-border-radius);
}
.AtInput > .input:focus-visible {
  outline: none;
}
.AtInput > .input {
  width: 100%;
  border: none;
  border-radius: var(--input-border-radius);
  line-height: normal;
  text-indent: calc(var(--input-indent) - var(--input-inline-padding));
}
.AtInput > .input:focus::-moz-placeholder {
  color: transparent;
}
.AtInput > .input:focus::placeholder {
  color: transparent;
}
.AtInput > .input::-moz-placeholder {
  color: var(--gray-600);
}
.AtInput > .input::placeholder {
  color: var(--gray-600);
}
.AtInput > .input::-webkit-outer-spin-button, .AtInput > .input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}
.AtInput > .input[type=number] {
  -moz-appearance: textfield;
}
.AtInput:focus-within, .AtInput:not(.empty-value) {
  --icon-colors: var(--pri-500);
}
.AtInput-clear {
  display: flex;
  align-items: center;
  color: var(--icon-colors);
  -webkit-padding-end: var(--icon-spacing);
          padding-inline-end: var(--icon-spacing);
}
.AtInput-error {
  color: var(--danger-500);
  -webkit-padding-end: var(--icon-spacing);
          padding-inline-end: var(--icon-spacing);
}
.AtInput-icon {
  display: flex;
  align-items: center;
  color: var(--icon-colors);
}
.AtInput-icon.icon-start {
  -webkit-padding-start: var(--icon-spacing);
          padding-inline-start: var(--icon-spacing);
}
.AtInput-icon.icon-end:has(svg) {
  -webkit-padding-end: var(--icon-spacing);
          padding-inline-end: var(--icon-spacing);
}
.AtInput-icon.border-start {
  -webkit-padding-end: var(--icon-spacing);
          padding-inline-end: var(--icon-spacing);
  -webkit-border-end: solid 1px var(--gray-600);
          border-inline-end: solid 1px var(--gray-600);
}
.AtInput-icon.border-end {
  -webkit-padding-start: var(--icon-spacing);
          padding-inline-start: var(--icon-spacing);
  -webkit-border-start: solid 1px var(--gray-600);
          border-inline-start: solid 1px var(--gray-600);
}
.AtInput.has-start-icon {
  --label-hor-offset: 50px;
}
.AtInput .LengthLimit {
  position: absolute;
  inset-inline-end: 0;
  bottom: calc(100% + 4px);
}
.AtInput.mt-invalid {
  --mt-color: var(--danger-500);
  --icon-colors: var(--danger-500);
}
.AtInput .ErrorMessage.position-bottom {
  -webkit-margin-start: var(--spacing-03);
          margin-inline-start: var(--spacing-03);
}

.AtInput[disabled=true],
.AtInput[disabled=disabled],
.AtInput.mt-disabled {
  border-color: var(--greyBA);
  background: var(--disabled-grey);
}
.AtInput[disabled=true] input,
.AtInput[disabled=true] label,
.AtInput[disabled=disabled] input,
.AtInput[disabled=disabled] label,
.AtInput.mt-disabled input,
.AtInput.mt-disabled label {
  cursor: not-allowed;
  background: var(--disabled-bg-color);
}

.AtInput input[type=date]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  display: none;
}
.AtInput input[type=date]::-webkit-calendar-picker-indicator {
  -webkit-appearance: none;
  display: none;
}
.SearchInput .highlighted {
  color: var(--pri-500);
}
.AtSelectFilter {
  min-width: 100px;
  flex-grow: 1;
  flex: auto;
  position: sticky;
  inset-block-start: 0;
  background-color: var(--white);
  z-index: 2;
}
.search-wrapper {
  display: flex;
  align-items: center;
}
.search-wrapper .mt-container {
  max-width: 100%;
}
.search-wrapper .popup {
  font-weight: normal;
}
.search-wrapper .popup .icon-general-search {
  font-size: 1em;
  vertical-align: middle;
}
.AtSelectSelections .AtSelectSelections_remove-btn {
  position: relative;
  transform: translateY(10%);
}
.AtSelectSelections .AtSelectSelections_remove-btn:focus, .AtSelectSelections .AtSelectSelections_remove-btn:hover {
  color: var(--severity-red);
}
.AtSelectSelections .AtSelectSelections_remove-btn > .icon {
  vertical-align: unset;
}
.AtSelectSelections .round-button {
  display: inline-block;
  width: 30px;
  height: 30px;
  border-radius: 16px;
  border: solid 1px var(--lightish-blue);
  color: var(--lightish-blue);
  text-align: center;
  cursor: pointer;
}
.AtSelectSelections .round-button .icon {
  display: inline-block;
  transform: rotate(180deg);
  font-size: 10px;
}
.icon[data-v-511eff88] {
  vertical-align: middle;
}
.icon.icon-last[data-v-511eff88] {
  padding-left: 4px;
}
.icon.icon-first[data-v-511eff88] {
  padding-right: 4px;
}
.round[data-v-511eff88] {
  border-radius: 50%;
}
.no-border[data-v-511eff88] {
  padding: 0;
  border: 0;
}
/**
* Mocks padding-end behaviour
 */
/**
* Mocks padding-start behaviour
 */
/**
* Removes pad-end from last and pad-start from first elements
 */
/**
* Adds settings to have text-overflow: ellipsis.
 */
/**
* Creates a css arrow pointing to the top
 */
/**
* Creates a css arrow pointing to the bottom
 */
/**
* Creates a css arrow pointing to the right
 */
/**
* Creates a css arrow pointing to the left
 */
/**
* Change color of SVG icon
*/
/**
* Controls styles based on the body direction -
* has a optional 4th argument to overwrite the rtl attribute
**/
/**
* Creates a container with collapsing margin at a certain point
**/
.AtSelectStatus {
  font-size: pxToRem(14);
}
.AtSelectStatus-loading > .loader {
  vertical-align: text-bottom;
}
.TruncateWithTooltip[data-v-3167c712] {
  width: -moz-fit-content;
  width: fit-content;
}
.AtSelectBodyInlineLabel[data-v-67a963ca] {
  height: 100%;
}
.AtSelectBodyInlineLabel .AtSelectBody-label.mt-label[data-v-67a963ca] {
  position: static;
  margin: 0;
  top: unset;
  transform: unset;
}
.label-with-values[data-v-67a963ca] {
  color: var(--gray-1000);
}
.AtSelectBodyJumpingLabel[data-v-17ba44d0] {
  height: 100%;
}
.AtSelectBodyJumpingLabel-result[data-v-17ba44d0] {
  height: 100%;
}
.AtSelectBody-button {
  display: block;
  width: 100%;
  padding: 0;
  margin: 0;
  text-align: start;
  -webkit-padding-start: var(--input-indent);
          padding-inline-start: var(--input-indent);
  -webkit-padding-end: var(--input-indent);
          padding-inline-end: var(--input-indent);
  font-size: var(--input-font-size);
  color: var(--mt-color);
  height: 100%;
}
.AtSelectBody-clear {
  display: flex;
  align-items: center;
  color: var(--pri-500);
  -webkit-margin-end: var(--spacing-02);
          margin-inline-end: var(--spacing-02);
}
.AtSelectBody.dropdown-opened .select-arrow {
  transform: rotate(180deg);
}
.AtSelectBody .select-arrow {
  display: inline-block;
}

.size-s .AtSelectBody .mt-label {
  top: 50%;
  transform: translateY(-50%);
}
.size-s .AtSelectBody .mt-label.up {
  transform: translateY(-160%);
}
.size-s .AtSelectBody-button {
  height: 2em;
}

.size-m .AtSelectBody .mt-label {
  top: 50%;
  transform: translateY(-50%);
}
.size-m .AtSelectBody .mt-label.up {
  transform: translateY(-180%);
}
.size-m .AtSelectBody-button {
  height: 2.5rem;
  line-height: 1.1em;
}

.AtSelectBody-buttons {
  display: flex;
  align-items: center;
  color: var(--buttons-color);
  -webkit-margin-end: 0;
          margin-inline-end: 0;
}
.AtSelectBody-buttons > .body-btn {
  -webkit-margin-end: var(--spacing-02);
          margin-inline-end: var(--spacing-02);
}

body[dir=rtl] .AtSelectBody-buttons {
  right: unset;
  left: 0;
}
.AtSelect,
.DropdownListContainer,
.AtSelectBody {
  --buttons-color: var(--mt-color);
}
.AtSelect-label,
.DropdownListContainer-label,
.AtSelectBody-label {
  font-size: var(--input-label-size);
}

.AtSelect {
  --select-height: var(--input-height);
  --atselect-background: var(--gray-100);
}
.AtSelect > * {
  height: inherit;
}
.AtSelect > * {
  height: inherit;
}
.AtSelect > .width-inherit {
  width: inherit;
}
.AtSelect.at-grid {
  row-gap: var(--spacing-03);
}
.AtSelect.at-grid *[class*=at-col] {
  max-width: inherit;
}
.AtSelect.focused {
  --label-color: var(--input-color-focus);
}
.AtSelect.focused .mt-container {
  border-color: var(--pri-500);
}
.AtSelect.mt-disabled {
  pointer-events: none;
}
.AtSelect.mt-disabled .mt-container {
  background-color: var(--gray-200);
}
.AtSelect.mt-disabled .AtSelectBody, .AtSelect.mt-disabled .AtSelectBody label {
  background-color: transparent;
  cursor: default;
}
.AtSelect.mt-disabled .AtSelectBody .AtSelectBody-buttons {
  cursor: default;
}
.AtSelect.mt-disabled .AtSelectBody-button {
  cursor: default;
}
.AtSelect.mt-disabled .AtSelectBody, .AtSelect.mt-disabled .AtSelectBody label {
  pointer-events: all;
  cursor: default;
}
.AtSelect.mt-disabled .AtSelectBody .AtSelectBody-buttons {
  cursor: default;
}
.AtSelect .input-container-height {
  height: var(--select-height);
}
.AtSelect.size-s {
  --select-height: 32px;
}
.AtSelect .mt-container {
  max-width: inherit;
  background-color: white;
  height: 100%;
}
.AtSelect .AtSelectBody {
  height: 100%;
}
.AtSelect .AtSelectBody, .AtSelect .AtSelectBody label {
  cursor: pointer;
}
.AtSelect .AtSelectBody label {
  cursor: pointer;
}
.AtSelect .AtSelectBody-button {
  outline: none;
}
.AtSelect .AtSelectBody .AtSelectBody-buttons {
  cursor: pointer;
}
.AtSelect .body-container {
  background: var(--atselect-background);
}
.AtSelect.inline {
  margin: 0.25rem;
  --select-height: 32px;
  --label-color: var(--gray-1000);
  min-width: none;
  display: inline-flex;
}
.AtSelect.inline .body-container {
  height: var(--select-height);
  background: var(--pri-100);
}
.AtSelect.inline .body-container .AtSelectBody {
  --buttons-color: var(--gray-1000);
  width: -moz-fit-content;
  width: fit-content;
}
.AtSelect.inline .body-container .AtSelectBody .AtSelectBodyInlineLabel {
  height: 100%;
}
.AtSelect.inline .body-container .AtSelectBody-label {
  position: relative;
  max-width: unset;
  min-width: -moz-min-content;
  min-width: min-content;
  background: transparent;
  inset-inline-start: 0px;
  -webkit-padding-start: 8px;
          padding-inline-start: 8px;
  -webkit-padding-end: 24px;
          padding-inline-end: 24px;
}
.AtSelect.inline .body-container .AtSelectBody-label.mt-label {
  font-weight: 600;
  top: unset;
  height: unset;
}
.AtSelect.inline.mt-disabled {
  --label-color: var(--gray-600);
}
.AtSelect.inline.mt-disabled .AtSelectBody {
  --buttons-color: var(--gray-400);
}

.AtSelectDropdown-groups {
  margin: 0;
}
.AtSelectDropdown-groups > li {
  margin: 0;
}

.AtSelectDropdown-flat {
  list-style: none;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
}

.empty-selection {
  grid-column: span 12;
}
